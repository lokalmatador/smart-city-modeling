/*
 * generated by Xtext 2.36.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.smartcitymodel.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.smartcitymodel.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.smartcitymodel.services.DslGrammarAccess;

}

@parser::members {

 	private DslGrammarAccess grammarAccess;

    public InternalDslParser(TokenStream input, DslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SmartCityModel";
   	}

   	@Override
   	protected DslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSmartCityModel
entryRuleSmartCityModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSmartCityModelRule()); }
	iv_ruleSmartCityModel=ruleSmartCityModel
	{ $current=$iv_ruleSmartCityModel.current; }
	EOF;

// Rule SmartCityModel
ruleSmartCityModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSmartCityModelAccess().getEntitiesEntityParserRuleCall_0_0());
				}
				lv_entities_0_0=ruleEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSmartCityModelRule());
					}
					add(
						$current,
						"entities",
						lv_entities_0_0,
						"org.smartcitymodel.Dsl.Entity");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSmartCityModelAccess().getConnectionsConnectionParserRuleCall_1_0());
				}
				lv_connections_1_0=ruleConnection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSmartCityModelRule());
					}
					add(
						$current,
						"connections",
						lv_connections_1_0,
						"org.smartcitymodel.Dsl.Connection");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEntityAccess().getSensorParserRuleCall_0());
		}
		this_Sensor_0=ruleSensor
		{
			$current = $this_Sensor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityAccess().getActorParserRuleCall_1());
		}
		this_Actor_1=ruleActor
		{
			$current = $this_Actor_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityAccess().getControllerParserRuleCall_2());
		}
		this_Controller_2=ruleController
		{
			$current = $this_Controller_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityAccess().getCompoundEntityParserRuleCall_3());
		}
		this_CompoundEntity_3=ruleCompoundEntity
		{
			$current = $this_CompoundEntity_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sensor'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensorAccess().getSensorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getPropertiesPropertyParserRuleCall_3_0());
				}
				lv_properties_3_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					add(
						$current,
						"properties",
						lv_properties_3_0,
						"org.smartcitymodel.Dsl.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getPortsPortParserRuleCall_4_0());
				}
				lv_ports_4_0=rulePort
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					add(
						$current,
						"ports",
						lv_ports_4_0,
						"org.smartcitymodel.Dsl.Port");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getFrequencyFrequencyParserRuleCall_5_0());
				}
				lv_frequency_5_0=ruleFrequency
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					set(
						$current,
						"frequency",
						lv_frequency_5_0,
						"org.smartcitymodel.Dsl.Frequency");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getLocationLocationParserRuleCall_6_0());
				}
				lv_location_6_0=ruleLocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					set(
						$current,
						"location",
						lv_location_6_0,
						"org.smartcitymodel.Dsl.Location");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleActor
entryRuleActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActorRule()); }
	iv_ruleActor=ruleActor
	{ $current=$iv_ruleActor.current; }
	EOF;

// Rule Actor
ruleActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='actor'
		{
			newLeafNode(otherlv_0, grammarAccess.getActorAccess().getActorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getPropertiesPropertyParserRuleCall_3_0());
				}
				lv_properties_3_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					add(
						$current,
						"properties",
						lv_properties_3_0,
						"org.smartcitymodel.Dsl.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getPortsPortParserRuleCall_4_0());
				}
				lv_ports_4_0=rulePort
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					add(
						$current,
						"ports",
						lv_ports_4_0,
						"org.smartcitymodel.Dsl.Port");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getActionsActionParserRuleCall_5_0());
				}
				lv_actions_5_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					add(
						$current,
						"actions",
						lv_actions_5_0,
						"org.smartcitymodel.Dsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getLocationLocationParserRuleCall_6_0());
				}
				lv_location_6_0=ruleLocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					set(
						$current,
						"location",
						lv_location_6_0,
						"org.smartcitymodel.Dsl.Location");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getActorAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleController
entryRuleController returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControllerRule()); }
	iv_ruleController=ruleController
	{ $current=$iv_ruleController.current; }
	EOF;

// Rule Controller
ruleController returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='controller'
		{
			newLeafNode(otherlv_0, grammarAccess.getControllerAccess().getControllerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getControllerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControllerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getControllerAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getControllerAccess().getPropertiesPropertyParserRuleCall_3_0());
				}
				lv_properties_3_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControllerRule());
					}
					add(
						$current,
						"properties",
						lv_properties_3_0,
						"org.smartcitymodel.Dsl.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getControllerAccess().getPortsPortParserRuleCall_4_0());
				}
				lv_ports_4_0=rulePort
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControllerRule());
					}
					add(
						$current,
						"ports",
						lv_ports_4_0,
						"org.smartcitymodel.Dsl.Port");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getControllerAccess().getActionsActionParserRuleCall_5_0());
				}
				lv_actions_5_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControllerRule());
					}
					add(
						$current,
						"actions",
						lv_actions_5_0,
						"org.smartcitymodel.Dsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getControllerAccess().getServicesServiceParserRuleCall_6_0());
				}
				lv_services_6_0=ruleService
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControllerRule());
					}
					add(
						$current,
						"services",
						lv_services_6_0,
						"org.smartcitymodel.Dsl.Service");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getControllerAccess().getLocationLocationParserRuleCall_7_0());
				}
				lv_location_7_0=ruleLocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControllerRule());
					}
					set(
						$current,
						"location",
						lv_location_7_0,
						"org.smartcitymodel.Dsl.Location");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getControllerAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleCompoundEntity
entryRuleCompoundEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompoundEntityRule()); }
	iv_ruleCompoundEntity=ruleCompoundEntity
	{ $current=$iv_ruleCompoundEntity.current; }
	EOF;

// Rule CompoundEntity
ruleCompoundEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='structure'
		{
			newLeafNode(otherlv_0, grammarAccess.getCompoundEntityAccess().getStructureKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCompoundEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompoundEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCompoundEntityAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompoundEntityAccess().getSensorsSensorParserRuleCall_3_0());
				}
				lv_sensors_3_0=ruleSensor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompoundEntityRule());
					}
					add(
						$current,
						"sensors",
						lv_sensors_3_0,
						"org.smartcitymodel.Dsl.Sensor");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getCompoundEntityAccess().getActorsActorParserRuleCall_4_0());
				}
				lv_actors_4_0=ruleActor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompoundEntityRule());
					}
					add(
						$current,
						"actors",
						lv_actors_4_0,
						"org.smartcitymodel.Dsl.Actor");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getCompoundEntityAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='property'
		{
			newLeafNode(otherlv_0, grammarAccess.getPropertyAccess().getPropertyKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPropertyAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAccess().getTypeTYPEEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleTYPE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.smartcitymodel.Dsl.TYPE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAccess().getAccessACCESSEnumRuleCall_4_0());
				}
				lv_access_4_0=ruleACCESS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRule());
					}
					set(
						$current,
						"access",
						lv_access_4_0,
						"org.smartcitymodel.Dsl.ACCESS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getPropertyAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRulePort
entryRulePort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortRule()); }
	iv_rulePort=rulePort
	{ $current=$iv_rulePort.current; }
	EOF;

// Rule Port
rulePort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='port'
		{
			newLeafNode(otherlv_0, grammarAccess.getPortAccess().getPortKeyword_0());
		}
		(
			(
				lv_id_1_0=RULE_INT
				{
					newLeafNode(lv_id_1_0, grammarAccess.getPortAccess().getIdINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPortAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='direction'
		{
			newLeafNode(otherlv_3, grammarAccess.getPortAccess().getDirectionKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPortAccess().getDirectionDIRECTIONEnumRuleCall_4_0());
				}
				lv_direction_4_0=ruleDIRECTION
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPortRule());
					}
					set(
						$current,
						"direction",
						lv_direction_4_0,
						"org.smartcitymodel.Dsl.DIRECTION");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='type'
		{
			newLeafNode(otherlv_5, grammarAccess.getPortAccess().getTypeKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPortAccess().getTypeTYPEEnumRuleCall_6_0());
				}
				lv_type_6_0=ruleTYPE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPortRule());
					}
					set(
						$current,
						"type",
						lv_type_6_0,
						"org.smartcitymodel.Dsl.TYPE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='unit'
		{
			newLeafNode(otherlv_7, grammarAccess.getPortAccess().getUnitKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPortAccess().getUnitUNITEnumRuleCall_8_0());
				}
				lv_unit_8_0=ruleUNIT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPortRule());
					}
					set(
						$current,
						"unit",
						lv_unit_8_0,
						"org.smartcitymodel.Dsl.UNIT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getPortAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleLocation
entryRuleLocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocationRule()); }
	iv_ruleLocation=ruleLocation
	{ $current=$iv_ruleLocation.current; }
	EOF;

// Rule Location
ruleLocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='location'
		{
			newLeafNode(otherlv_0, grammarAccess.getLocationAccess().getLocationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLocationAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='longitude'
		{
			newLeafNode(otherlv_2, grammarAccess.getLocationAccess().getLongitudeKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLocationAccess().getLongitudeFLOATParserRuleCall_3_0());
				}
				lv_longitude_3_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocationRule());
					}
					set(
						$current,
						"longitude",
						lv_longitude_3_0,
						"org.smartcitymodel.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='degrees'
		{
			newLeafNode(otherlv_4, grammarAccess.getLocationAccess().getDegreesKeyword_4());
		}
		otherlv_5='latitude'
		{
			newLeafNode(otherlv_5, grammarAccess.getLocationAccess().getLatitudeKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLocationAccess().getLatitudeFLOATParserRuleCall_6_0());
				}
				lv_latitude_6_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocationRule());
					}
					set(
						$current,
						"latitude",
						lv_latitude_6_0,
						"org.smartcitymodel.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='degrees'
		{
			newLeafNode(otherlv_7, grammarAccess.getLocationAccess().getDegreesKeyword_7());
		}
		otherlv_8='altitude'
		{
			newLeafNode(otherlv_8, grammarAccess.getLocationAccess().getAltitudeKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLocationAccess().getAltitudeFLOATParserRuleCall_9_0());
				}
				lv_altitude_9_0=ruleFLOAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocationRule());
					}
					set(
						$current,
						"altitude",
						lv_altitude_9_0,
						"org.smartcitymodel.Dsl.FLOAT");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='meters'
		{
			newLeafNode(otherlv_10, grammarAccess.getLocationAccess().getMetersKeyword_10());
		}
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getLocationAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleFrequency
entryRuleFrequency returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFrequencyRule()); }
	iv_ruleFrequency=ruleFrequency
	{ $current=$iv_ruleFrequency.current; }
	EOF;

// Rule Frequency
ruleFrequency returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='frequency'
		{
			newLeafNode(otherlv_0, grammarAccess.getFrequencyAccess().getFrequencyKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getFrequencyAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='every'
		{
			newLeafNode(otherlv_2, grammarAccess.getFrequencyAccess().getEveryKeyword_2());
		}
		(
			(
				lv_value_3_0=RULE_INT
				{
					newLeafNode(lv_value_3_0, grammarAccess.getFrequencyAccess().getValueINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFrequencyRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFrequencyAccess().getUnitTIMEEnumRuleCall_4_0());
				}
				lv_unit_4_0=ruleTIME
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFrequencyRule());
					}
					set(
						$current,
						"unit",
						lv_unit_4_0,
						"org.smartcitymodel.Dsl.TIME");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getFrequencyAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='action'
		{
			newLeafNode(otherlv_0, grammarAccess.getActionAccess().getActionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getStmtsStatementParserRuleCall_3_0());
				}
				lv_stmts_3_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					add(
						$current,
						"stmts",
						lv_stmts_3_0,
						"org.smartcitymodel.Dsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getActionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getStatementAccess().getConditionalStatementParserRuleCall());
	}
	this_ConditionalStatement_0=ruleConditionalStatement
	{
		$current = $this_ConditionalStatement_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleConditionalStatement
entryRuleConditionalStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalStatementRule()); }
	iv_ruleConditionalStatement=ruleConditionalStatement
	{ $current=$iv_ruleConditionalStatement.current; }
	EOF;

// Rule ConditionalStatement
ruleConditionalStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionalStatementAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalStatementAccess().getConditionConditionParserRuleCall_1_0());
				}
				lv_condition_1_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalStatementRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"org.smartcitymodel.Dsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getConditionalStatementAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalStatementAccess().getEffectEffectParserRuleCall_3_0());
				}
				lv_effect_3_0=ruleEffect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalStatementRule());
					}
					set(
						$current,
						"effect",
						lv_effect_3_0,
						"org.smartcitymodel.Dsl.Effect");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getConditionalStatementAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAccess().getTargetPortFQNParserRuleCall_0_0());
				}
				lv_target_0_0=rulePortFQN
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionRule());
					}
					set(
						$current,
						"target",
						lv_target_0_0,
						"org.smartcitymodel.Dsl.PortFQN");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getConditionAccess().getPropertyFQNParserRuleCall_1_0());
			}
			rulePropertyFQN
			{
				afterParserOrEnumRuleCall();
			}
			this_COMP_2=RULE_COMP
			{
				newLeafNode(this_COMP_2, grammarAccess.getConditionAccess().getCOMPTerminalRuleCall_1_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getConditionAccess().getExprPortFQNParserRuleCall_1_2_0_0());
						}
						lv_expr_3_1=rulePortFQN
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConditionRule());
							}
							set(
								$current,
								"expr",
								lv_expr_3_1,
								"org.smartcitymodel.Dsl.PortFQN");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getConditionAccess().getExprExpressionParserRuleCall_1_2_0_1());
						}
						lv_expr_3_2=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConditionRule());
							}
							set(
								$current,
								"expr",
								lv_expr_3_2,
								"org.smartcitymodel.Dsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleEffect
entryRuleEffect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEffectRule()); }
	iv_ruleEffect=ruleEffect
	{ $current=$iv_ruleEffect.current; }
	EOF;

// Rule Effect
ruleEffect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='set'
			{
				newLeafNode(otherlv_0, grammarAccess.getEffectAccess().getSetKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEffectAccess().getTargetPortFQNParserRuleCall_0_1_0());
					}
					lv_target_1_0=rulePortFQN
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEffectRule());
						}
						set(
							$current,
							"target",
							lv_target_1_0,
							"org.smartcitymodel.Dsl.PortFQN");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getEffectAccess().getPropertyFQNParserRuleCall_1_0());
			}
			rulePropertyFQN
			{
				afterParserOrEnumRuleCall();
			}
			otherlv_3='to'
			{
				newLeafNode(otherlv_3, grammarAccess.getEffectAccess().getToKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEffectAccess().getExprExpressionParserRuleCall_1_2_0());
					}
					lv_expr_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEffectRule());
						}
						set(
							$current,
							"expr",
							lv_expr_4_0,
							"org.smartcitymodel.Dsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current.getText(); }
	EOF;

// Rule Expression
ruleExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getValueExpressionParserRuleCall());
	}
	this_ValueExpression_0=ruleValueExpression
	{
		$current.merge(this_ValueExpression_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleValueExpression
entryRuleValueExpression returns [String current=null]:
	{ newCompositeNode(grammarAccess.getValueExpressionRule()); }
	iv_ruleValueExpression=ruleValueExpression
	{ $current=$iv_ruleValueExpression.current.getText(); }
	EOF;

// Rule ValueExpression
ruleValueExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getValueExpressionAccess().getINTTerminalRuleCall_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueExpressionAccess().getFLOATParserRuleCall_1());
		}
		this_FLOAT_1=ruleFLOAT
		{
			$current.merge(this_FLOAT_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_STRING_2=RULE_STRING
		{
			$current.merge(this_STRING_2);
		}
		{
			newLeafNode(this_STRING_2, grammarAccess.getValueExpressionAccess().getSTRINGTerminalRuleCall_2());
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueExpressionAccess().getBOOLEANParserRuleCall_3());
		}
		this_BOOLEAN_3=ruleBOOLEAN
		{
			$current.merge(this_BOOLEAN_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleService
entryRuleService returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	iv_ruleService=ruleService
	{ $current=$iv_ruleService.current; }
	EOF;

// Rule Service
ruleService returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='service'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceAccess().getServiceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleConnection
entryRuleConnection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectionRule()); }
	iv_ruleConnection=ruleConnection
	{ $current=$iv_ruleConnection.current; }
	EOF;

// Rule Connection
ruleConnection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='connection'
		{
			newLeafNode(otherlv_0, grammarAccess.getConnectionAccess().getConnectionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getConnectionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConnectionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectionAccess().getSourceRefPortFQNParserRuleCall_3_0());
				}
				lv_sourceRef_3_0=rulePortFQN
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectionRule());
					}
					set(
						$current,
						"sourceRef",
						lv_sourceRef_3_0,
						"org.smartcitymodel.Dsl.PortFQN");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='->'
		{
			newLeafNode(otherlv_4, grammarAccess.getConnectionAccess().getHyphenMinusGreaterThanSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectionAccess().getTargetRefPortFQNParserRuleCall_5_0());
				}
				lv_targetRef_5_0=rulePortFQN
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectionRule());
					}
					set(
						$current,
						"targetRef",
						lv_targetRef_5_0,
						"org.smartcitymodel.Dsl.PortFQN");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getConnectionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRulePortFQN
entryRulePortFQN returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getPortFQNRule()); }
	iv_rulePortFQN=rulePortFQN
	{ $current=$iv_rulePortFQN.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule PortFQN
rulePortFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getPortFQNAccess().getIDTerminalRuleCall_0());
		}
		(
			(
				kw='::'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPortFQNAccess().getColonColonKeyword_1_0_0());
				}
				this_INT_2=RULE_INT
				{
					$current.merge(this_INT_2);
				}
				{
					newLeafNode(this_INT_2, grammarAccess.getPortFQNAccess().getINTTerminalRuleCall_1_0_1());
				}
			)
			    |
			(
				kw='::'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPortFQNAccess().getColonColonKeyword_1_1_0());
				}
				this_ID_4=RULE_ID
				{
					$current.merge(this_ID_4);
				}
				{
					newLeafNode(this_ID_4, grammarAccess.getPortFQNAccess().getIDTerminalRuleCall_1_1_1());
				}
				kw='::'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPortFQNAccess().getColonColonKeyword_1_1_2());
				}
				this_INT_6=RULE_INT
				{
					$current.merge(this_INT_6);
				}
				{
					newLeafNode(this_INT_6, grammarAccess.getPortFQNAccess().getINTTerminalRuleCall_1_1_3());
				}
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRulePropertyFQN
entryRulePropertyFQN returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getPropertyFQNRule()); }
	iv_rulePropertyFQN=rulePropertyFQN
	{ $current=$iv_rulePropertyFQN.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule PropertyFQN
rulePropertyFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getPropertyFQNAccess().getIDTerminalRuleCall_0());
		}
		(
			(
				kw='::'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPropertyFQNAccess().getColonColonKeyword_1_0_0());
				}
				this_ID_2=RULE_ID
				{
					$current.merge(this_ID_2);
				}
				{
					newLeafNode(this_ID_2, grammarAccess.getPropertyFQNAccess().getIDTerminalRuleCall_1_0_1());
				}
			)
			    |
			(
				kw='::'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPropertyFQNAccess().getColonColonKeyword_1_1_0());
				}
				this_ID_4=RULE_ID
				{
					$current.merge(this_ID_4);
				}
				{
					newLeafNode(this_ID_4, grammarAccess.getPropertyFQNAccess().getIDTerminalRuleCall_1_1_1());
				}
				kw='::'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPropertyFQNAccess().getColonColonKeyword_1_1_2());
				}
				this_ID_6=RULE_ID
				{
					$current.merge(this_ID_6);
				}
				{
					newLeafNode(this_ID_6, grammarAccess.getPropertyFQNAccess().getIDTerminalRuleCall_1_1_3());
				}
			)
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleFLOAT
entryRuleFLOAT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFLOATRule()); }
	iv_ruleFLOAT=ruleFLOAT
	{ $current=$iv_ruleFLOAT.current.getText(); }
	EOF;

// Rule FLOAT
ruleFLOAT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getFLOATAccess().getINTTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFLOATAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getFLOATAccess().getINTTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBOOLEANRule()); }
	iv_ruleBOOLEAN=ruleBOOLEAN
	{ $current=$iv_ruleBOOLEAN.current.getText(); }
	EOF;

// Rule BOOLEAN
ruleBOOLEAN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLEANAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLEANAccess().getFalseKeyword_1());
		}
	)
;

// Rule DIRECTION
ruleDIRECTION returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='in'
			{
				$current = grammarAccess.getDIRECTIONAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDIRECTIONAccess().getInEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='out'
			{
				$current = grammarAccess.getDIRECTIONAccess().getOutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDIRECTIONAccess().getOutEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule TYPE
ruleTYPE returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='float'
			{
				$current = grammarAccess.getTYPEAccess().getFloatEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTYPEAccess().getFloatEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='integer'
			{
				$current = grammarAccess.getTYPEAccess().getIntegerEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTYPEAccess().getIntegerEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='string'
			{
				$current = grammarAccess.getTYPEAccess().getStringEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTYPEAccess().getStringEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='bool'
			{
				$current = grammarAccess.getTYPEAccess().getBoolEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTYPEAccess().getBoolEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule UNIT
ruleUNIT returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='cd'
			{
				$current = grammarAccess.getUNITAccess().getCdEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getUNITAccess().getCdEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='C'
			{
				$current = grammarAccess.getUNITAccess().getCEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getUNITAccess().getCEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule TIME
ruleTIME returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='s'
			{
				$current = grammarAccess.getTIMEAccess().getSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTIMEAccess().getSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='m'
			{
				$current = grammarAccess.getTIMEAccess().getMEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTIMEAccess().getMEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='h'
			{
				$current = grammarAccess.getTIMEAccess().getHEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTIMEAccess().getHEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='d'
			{
				$current = grammarAccess.getTIMEAccess().getDEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTIMEAccess().getDEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule ACCESS
ruleACCESS returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='r'
			{
				$current = grammarAccess.getACCESSAccess().getREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getACCESSAccess().getREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='w'
			{
				$current = grammarAccess.getACCESSAccess().getWEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getACCESSAccess().getWEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='rw'
			{
				$current = grammarAccess.getACCESSAccess().getRwEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getACCESSAccess().getRwEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_COMP : ('<'|'='|'>');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
